[{"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/index.js":"1","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/firebase.js":"2","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/App.js":"3","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/router.js":"4","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/routes/home.jsx":"5","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/routes/auth.jsx":"6","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/navigation.jsx":"7","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/routes/profile.jsx":"8","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/tweet.js":"9","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/tweetFactory.jsx":"10","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/authForm.js":"11"},{"size":294,"mtime":1612492241055,"results":"12","hashOfConfig":"13"},{"size":908,"mtime":1612445315586,"results":"14","hashOfConfig":"13"},{"size":1398,"mtime":1612492381295,"results":"15","hashOfConfig":"13"},{"size":1461,"mtime":1612491168579,"results":"16","hashOfConfig":"13"},{"size":1401,"mtime":1612491586711,"results":"17","hashOfConfig":"13"},{"size":1435,"mtime":1612493637207,"results":"18","hashOfConfig":"13"},{"size":1280,"mtime":1612490731443,"results":"19","hashOfConfig":"13"},{"size":1416,"mtime":1612491721411,"results":"20","hashOfConfig":"13"},{"size":2381,"mtime":1612491803412,"results":"21","hashOfConfig":"13"},{"size":3229,"mtime":1612491120800,"results":"22","hashOfConfig":"13"},{"size":1983,"mtime":1612493205554,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18gi4rx",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/index.js",["54"],"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/firebase.js",[],["55","56"],"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/App.js",[],"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/router.js",[],"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/routes/home.jsx",["57","58","59","60","61"],"import React, { useEffect, useState } from 'react';\nimport Tweet from '../components/tweet';\nimport TweetFactory from '../components/tweetFactory';\nimport { dbService, storageService } from '../firebase';\n\nconst Home = ({userObj}) => {\n\n    const [tweets, setTweets] = useState([]);\n    const [file, setFile] = useState([]);\n    const [attachment, setAttachment] = useState(\"\");\n    \n    // const getTweets = async() => {\n    //     const dbTweets = await dbService.collection(\"tweets\").get();\n    //     dbTweets.forEach((document) => {\n    //         const tweetObject = {\n    //             ...document.data(),\n    //             id: document.id,\n    //         }\n    //         setTweets(prev => [tweetObject, ...prev])\n    //     });\n    // }\n\n    useEffect(() => {\n        // getTweets();\n        dbService.collection(\"tweets\").onSnapshot(snapshot => {\n        const tweetArray = snapshot.docs.map(doc => ({\n            id: doc.id, ...doc.data(),\n        }));\n        setTweets(tweetArray)\n        })\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <TweetFactory userObj={userObj} tweets={tweets} />\n            <div style={{ marginTop: 30 }}>\n                {tweets.map(tweet => (\n                    <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/routes/auth.jsx",[],["62","63"],"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/navigation.jsx",[],"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/routes/profile.jsx",["64","65"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService, dbService } from '../firebase';\n\nconst Profile = ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/');\n    };\n\nconst getMyTweets = async() => {\n    const tweets = await dbService.collection(\"twwets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createAt\",\"desc\").get();\n    console.log(tweets.docs.map(doc => doc.data()))\n};\n\nconst onChange = (event) => {\n    const {\n    target: {value},\n    } = event;\n    setNewDisplayName(value);\n}\n\nuseEffect(() => {\n    getMyTweets();    \n}, [])\n\n\nconst onSubmit = async(event) => {\n    event.preventDefault();\n\n    if(userObj.displayName !== newDisplayName) {\n        // console.log(userObj.updataProfile);\n        await userObj.updateProfile({displayName: newDisplayName});\n    }\n    refreshUser();\n}\n    return <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10,}}/>\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n            Log Out\n        </span>\n    </div>\n}\n\nexport default Profile;",["66","67"],"/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/tweet.js",["68","69"],"import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../firebase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({tweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n        // console.log(ok)\n        if(ok) {\n            //delete tweet\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onSubmit =  async (event) => {\n        event.preventDefault();\n        console.log(tweetObj, newTweet);\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\n            text:newTweet,\n        })\n        setEditing(false);\n    }\n\n    const onChange = (event) => {\n        const {target: {value},} = event;\n        setNewTweet(value);\n    }\n\n    return (\n        <div className=\"nweet\">\n        {editing ? (\n        <>\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                type=\"text\"\n                placeholder=\"Edit your tweet\"\n                value={newTweet}\n                required\n                autoFocus\n                className=\"formInput\"\n                onChange={onChange}\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n            </form>\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n            </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n            {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n            {isOwner && (\n                <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/tweetFactory.jsx",["70"],"import React, { useState } from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport { dbService, storageService } from '../firebase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({userObj,tweets}) => {\n\n    const [tweet, setTweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    \n    const onSubmit = async (event) => {\n        if (tweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const reponse = await attachmentRef.putString(attachment, \"data_url\");\n\n            attachmentUrl = await reponse.ref.getDownloadURL();\n        }\n        const TweetObjet = {\n            text:tweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        await dbService.collection(\"tweets\").add(TweetObjet)\n        setTweet(\"\");\n        setAttachment(\"\");\n    }\n\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setTweet(value);\n    }\n\n    // console.log(tweets);\n\n    const onFileChange = (event) => {\n        // console.log(event.target.files);\n        const {target: {files},} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            console.log(finishedEvent);\n            const {currentTarget: {result},} = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n        // console.log(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n\n        return (\n            <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={tweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n                <input id=\"attach-file\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onFileChange}\n                    style={{\n                    opacity: 0,\n                }} />\n                {attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img src={attachment} style={{backgroundImage: attachment,}}/>\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                        </div>\n                    </div>)}\n            </form>\n        )\n    };\n\nexport default TweetFactory;","/Users/ohhyungook/Desktop/오형욱/portfolio/work/twitter/src/components/authForm.js",[],["71","72"],{"ruleId":"73","severity":1,"message":"74","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":4,"column":21,"nodeType":"75","messageId":"76","endLine":4,"endColumn":35},{"ruleId":"73","severity":1,"message":"82","line":9,"column":12,"nodeType":"75","messageId":"76","endLine":9,"endColumn":16},{"ruleId":"73","severity":1,"message":"83","line":9,"column":18,"nodeType":"75","messageId":"76","endLine":9,"endColumn":25},{"ruleId":"73","severity":1,"message":"84","line":10,"column":12,"nodeType":"75","messageId":"76","endLine":10,"endColumn":22},{"ruleId":"73","severity":1,"message":"85","line":10,"column":24,"nodeType":"75","messageId":"76","endLine":10,"endColumn":37},{"ruleId":"77","replacedBy":"86"},{"ruleId":"79","replacedBy":"87"},{"ruleId":"73","severity":1,"message":"88","line":19,"column":7,"nodeType":"75","messageId":"76","endLine":19,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":28,"column":4,"nodeType":"91","endLine":28,"endColumn":6,"suggestions":"92"},{"ruleId":"77","replacedBy":"93"},{"ruleId":"79","replacedBy":"94"},{"ruleId":"73","severity":1,"message":"95","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":59,"column":40,"nodeType":"98","endLine":59,"endColumn":76},{"ruleId":"96","severity":1,"message":"97","line":84,"column":25,"nodeType":"98","endLine":84,"endColumn":87},{"ruleId":"77","replacedBy":"99"},{"ruleId":"79","replacedBy":"100"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'storageService' is defined but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'attachment' is assigned a value but never used.","'setAttachment' is assigned a value but never used.",["101"],["102"],"'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyTweets'. Either include it or remove the dependency array.","ArrayExpression",["103"],["101"],["102"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["101"],["102"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [getMyTweets]",{"range":"106","text":"107"},[788,790],"[getMyTweets]"]