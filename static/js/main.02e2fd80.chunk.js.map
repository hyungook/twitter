{"version":3,"sources":["firebase.js","components/authForm.js","routes/auth.jsx","components/tweet.js","components/tweetFactory.jsx","routes/home.jsx","routes/profile.jsx","components/navigation.jsx","components/router.js","components/App.js","index.js"],"names":["firebaseInstance","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","AuthForm","props","useState","email","setEmail","password","setPassword","newAccount","setNewAcount","error","setError","onChange","event","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","TweetFactory","userObj","tweets","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","reponse","getDownloadURL","TweetObjet","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","getMyTweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02e2fd80.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport 'firebase/storage';\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DB_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\n// console.log(process.env.REACT_APP_API_KEY)\n// console.log(process.env.REACT_APP_AUTH_DOMAIN)\n\n\n  // Initialize Firebase\n// export default firebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nfirebase.initializeApp(firebaseConfig);\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\nimport { authService } from '../firebase';\n\n\nconst AuthForm = (props) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAcount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        console.log(event.target.name);\n        const {target:{name,value}} = event;\n\n        if(name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n          let data;\n          if (newAccount) {\n            data = await authService.createUserWithEmailAndPassword(\n              email,\n              password\n            );\n          } else {\n            data = await authService.signInWithEmailAndPassword(email, password);\n          }\n          console.log(data);\n        } catch (error) {\n          setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => {\n        setNewAcount(prev => !prev )\n    }\n\n    return (\n        <>\n        <form onSubmit={onSubmit} className=\"container\">\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" className=\"authInput\" required value={email} onChange={onChange} />\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" className=\"authInput\" required value={password} onChange={onChange} />\n            <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\n            {/* <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in\"} /> */}\n            {error && <span className=\"authError\">{error}</span>}\n            <span onClick={toggleAccount} className=\"authSwitch\">\n              {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </form>\n        </>\n    )\n}\n\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faTwitter,faGoogle,faGithub,} from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from '../components/authForm';\nimport { authService, firebaseInstance } from '../firebase';\n\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        // console.log(event.target.name);\n        const {target: {name}} = event;\n\n        let provider;\n        if(name === 'google') {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name === 'github') {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )}\n\nexport default Auth;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../firebase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({tweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n        // console.log(ok)\n        if(ok) {\n            //delete tweet\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onSubmit =  async (event) => {\n        event.preventDefault();\n        console.log(tweetObj, newTweet);\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\n            text:newTweet,\n        })\n        setEditing(false);\n    }\n\n    const onChange = (event) => {\n        const {target: {value},} = event;\n        setNewTweet(value);\n    }\n\n    return (\n        <div className=\"nweet\">\n        {editing ? (\n        <>\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                type=\"text\"\n                placeholder=\"Edit your tweet\"\n                value={newTweet}\n                required\n                autoFocus\n                className=\"formInput\"\n                onChange={onChange}\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n            </form>\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n            </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n            {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n            {isOwner && (\n                <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport { dbService, storageService } from '../firebase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({userObj,tweets}) => {\n\n    const [tweet, setTweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    \n    const onSubmit = async (event) => {\n        if (tweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const reponse = await attachmentRef.putString(attachment, \"data_url\");\n\n            attachmentUrl = await reponse.ref.getDownloadURL();\n        }\n        const TweetObjet = {\n            text:tweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        await dbService.collection(\"tweets\").add(TweetObjet)\n        setTweet(\"\");\n        setAttachment(\"\");\n    }\n\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setTweet(value);\n    }\n\n    // console.log(tweets);\n\n    const onFileChange = (event) => {\n        // console.log(event.target.files);\n        const {target: {files},} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            console.log(finishedEvent);\n            const {currentTarget: {result},} = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n        // console.log(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n\n        return (\n            <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={tweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n                <input id=\"attach-file\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onFileChange}\n                    style={{\n                    opacity: 0,\n                }} />\n                {attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img src={attachment} style={{backgroundImage: attachment,}}/>\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                        </div>\n                    </div>)}\n            </form>\n        )\n    };\n\nexport default TweetFactory;","import React, { useEffect, useState } from 'react';\nimport Tweet from '../components/tweet';\nimport TweetFactory from '../components/tweetFactory';\nimport { dbService, storageService } from '../firebase';\n\nconst Home = ({userObj}) => {\n\n    const [tweets, setTweets] = useState([]);\n    const [file, setFile] = useState([]);\n    const [attachment, setAttachment] = useState(\"\");\n    \n    // const getTweets = async() => {\n    //     const dbTweets = await dbService.collection(\"tweets\").get();\n    //     dbTweets.forEach((document) => {\n    //         const tweetObject = {\n    //             ...document.data(),\n    //             id: document.id,\n    //         }\n    //         setTweets(prev => [tweetObject, ...prev])\n    //     });\n    // }\n\n    useEffect(() => {\n        // getTweets();\n        dbService.collection(\"tweets\").onSnapshot(snapshot => {\n        const tweetArray = snapshot.docs.map(doc => ({\n            id: doc.id, ...doc.data(),\n        }));\n        setTweets(tweetArray)\n        })\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <TweetFactory userObj={userObj} tweets={tweets} />\n            <div style={{ marginTop: 30 }}>\n                {tweets.map(tweet => (\n                    <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService, dbService } from '../firebase';\n\nconst Profile = ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/');\n    };\n\nconst getMyTweets = async() => {\n    const tweets = await dbService.collection(\"twwets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createAt\",\"desc\").get();\n    console.log(tweets.docs.map(doc => doc.data()))\n};\n\nconst onChange = (event) => {\n    const {\n    target: {value},\n    } = event;\n    setNewDisplayName(value);\n}\n\nuseEffect(() => {\n    getMyTweets();    \n}, [])\n\n\nconst onSubmit = async(event) => {\n    event.preventDefault();\n\n    if(userObj.displayName !== newDisplayName) {\n        // console.log(userObj.updataProfile);\n        await userObj.updateProfile({displayName: newDisplayName});\n    }\n    refreshUser();\n}\n    return <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10,}}/>\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n            Log Out\n        </span>\n    </div>\n}\n\nexport default Profile;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n            </li>\n            <li>\n            <Link\n                to=\"/profile\"\n                style={{\n                    marginLeft: 10,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    fontSize: 12,\n                }}\n                >\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                <span style={{ marginTop: 10 }}>\n                    {userObj.displayName\n                    ? `${userObj.displayName}의 Profile`\n                    : \"Profile\"}\n                </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n    );\n\nexport default Navigation;","import React from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/auth';\nimport Home from '../routes/home';\nimport Profile from '../routes/profile';\nimport Navigation from './navigation';\n\n\nconst AppRouter =  ({refreshUser, isLoggedIn, userObj }) => {\n    \n    return(\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                <div\n                    style={{\n                    maxWidth: 890,\n                    width: \"100%\",\n                    margin: \"0 auto\",\n                    marginTop: 80,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    }}\n                >\n                    <Route exact path=\"/\">\n                        <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path=\"/profile\">\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                    <Redirect from=\"*\" to=\"/\" />\n                </div>) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </>\n                    )}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './router';\n// import firebase from '../firebase';\nimport { authService } from '../firebase';\n\nfunction App() {\n  // const auth = firebase.auth();\n  // console.log(authService.currentUser);\n\n  const [init, setInit] = useState(false);\n  // 로그인 여부를 확인할 수 있다\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  \n  // console.log(authService.currentUser);\n  \nuseEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n        // setUserObj(user);\n      } else {\n        setUserObj(null);  //  logout\n      }\n      setInit(true);\n    })\n  },[]);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj(\n      {\n      displayName: user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    }\n    // Object.assign({},user));\n    )}\n\n  return (\n  <>\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n         : \"Initializing...\" }\n    {/* <footer className=\"footer\">&copy; {new Date().getFullYear()}Twitter</footer> */}\n  </>);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from './firebase';\nimport \"./styles.css\";\n\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}